# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RUOisfM03plaBqRpd0cCYQC4O1k21Tnd
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df = pd.read_csv('Bitext_Sample_Customer_Support_Training_Dataset_27K_responses-v11.csv')
df.head()

df.info()
df.describe()
df.columns

print("Missing values:\n", df.isnull().sum())
print("Duplicate rows:", df.duplicated().sum())

import seaborn as sns
import matplotlib.pyplot as plt

# Assuming 'intent' and 'sentiment' columns exist
sns.countplot(x='intent', data=df)
plt.title("Distribution of Intents")
plt.xticks(rotation=45)
plt.show()

X = df['instruction']  # input
y = df['intent']      # target

df['intent'] = df['intent'].astype('category').cat.codes

df_encoded = pd.get_dummies(df,columns=['intent'],drop_first=True)

from sklearn.feature_extraction.text import TfidfVectorizer

vectorizer = TfidfVectorizer(max_features=1000)
X_vect = vectorizer.fit_transform(X).toarray()

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X_vect, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier()
model.fit(X_train, y_train)

from sklearn.metrics import classification_report, accuracy_score

y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

def predict_intent(query):
    query_vect = vectorizer.transform([query]).toarray()
    pred = model.predict(query_vect)
    return pred[0]

def prepare_input(text):
    return pd.DataFrame(vectorizer.transform([text]).toarray())

sample_input = "How can I reset my password?"
predicted_intent = predict_intent(sample_input)
print("Predicted Intent:", predicted_intent)

!pip install gradio
import gradio as gr

def chatbot_predict(query):
    pred_code = predict_intent(query)
    # Reverse the encoding if needed
    return f"Predicted customer intent: {pred_code}"

interface = gr.Interface(fn=chatbot_predict,
                         inputs="text",
                         outputs="text",
                         title="ðŸ¤– Customer Support Chatbot Intent Predictor")
interface.launch()